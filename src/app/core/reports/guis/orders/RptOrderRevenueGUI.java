/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.core.reports.guis.orders;

import app.common.modules.constants.ReportStoreConstants;
import app.common.modules.constants.ReportTemplateConstants;
import app.core.trade.dtos.orders.OrderReportEntity;
import base.configurations.constants.SystemConstants;
import base.configurations.constants.SystemStringConstants;
import base.data.dal.StoreProvider;
import base.guis.controls.BaseReportPanel;
import base.infrastructures.manipulations.ComponentRunnable;
import base.ultilities.utils.MessageUtils;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Map;

/**
 *
 * @author Khang
 */
public class RptOrderRevenueGUI extends BaseReportPanel implements ActionListener {

    /**
     * Creates new form RptRevenueGUI
     */
    public OrderReportEntity filterEntity;

    public RptOrderRevenueGUI() {
        super();
        initComponents();
        init();
    }

    private void init() {
        filterEntity = new OrderReportEntity();
        this.reportService.setReportProvider(new StoreProvider(OrderReportEntity.class));
        this.reportService.setSpName(ReportStoreConstants.RPT_ORDER_REVENUE);
        this.groupBox1.setDefaultTitle("Báo cáo doanh thu của Phiếu gọi món");

        this.reportService.reportDto.verticalSumColums.add("E");

        this.btnExcel.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        onExportExcel();
    }

    @Override
    public void bindingViewToModel() {
        this.filterEntity.setFromDate(dpFromDate.getValue());
        this.filterEntity.setToDate(dpToDate.getValue());
    }

    @Override
    public String strIsValid() {
        String strErr = "";
        if (this.filterEntity.getFromDate() == null || this.filterEntity.getToDate() == null) {
            strErr = "Dãy ngày không hợp lệ";
        }
        return strErr;
    }

    @Override
    public void onExportExcel() {
        bindingViewToModel();
        String strErr = strIsValid();
        if (!strErr.isEmpty()) {
            MessageUtils.showErrorMessage(this, strErr);
        } else {

            this.reportService.reportDto.clientParamsMap.put("B1", filterEntity.getFromDate());
            this.reportService.reportDto.clientParamsMap.put("D1", filterEntity.getToDate());
            
            new Thread(new ComponentRunnable(this) {
                @Override
                public void run() {
                    RptOrderRevenueGUI gui = (RptOrderRevenueGUI) this.getComponent();
                    String folderDirectory = gui.getFolderPathFromDialog();
                    if (!folderDirectory.isEmpty()) {

                        boolean bRs = gui.reportService.exportExcelFromResultSet(
                                //param
                                gui.filterEntity,
                                // template file
                                new StringBuilder(SystemConstants.DOMAIN_FOLDER)
                                        .append(SystemConstants.EXCEL_SOURCE_FOLDER).append(ReportTemplateConstants.TMP_RPT_ORDER_REVENUE_FILE_PATH).toString(),
                                //default is desktop folder output
                                "",
                                // output name
                                new StringBuilder("RPT_ORDER_REVENUE")
                                        .append("_").append(System.currentTimeMillis()).append(".xlsx").toString()
                        );
                        if (bRs == true) {
                            MessageUtils.showSuccessMessage(gui, SystemStringConstants.STR_SAVE_SUCCESS);
                        } else {
                            MessageUtils.showErrorMessage(gui, "Lỗi");
                        }
                    }

                    System.gc();
                }

            }).start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupBox1 = new app.common.controls.GroupBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dpFromDate = new app.common.controls.DatePickerControl();
        dpToDate = new app.common.controls.DatePickerControl();
        btnExcel = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Từ ngày:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Đến ngày:");

        btnExcel.setText("Xuất Excel");

        javax.swing.GroupLayout groupBox1Layout = new javax.swing.GroupLayout(groupBox1);
        groupBox1.setLayout(groupBox1Layout);
        groupBox1Layout.setHorizontalGroup(
            groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(groupBox1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(43, 43, 43)
                .addGroup(groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dpToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(160, Short.MAX_VALUE))
        );
        groupBox1Layout.setVerticalGroup(
            groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(groupBox1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(dpFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(groupBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(dpToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(groupBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(groupBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private app.common.controls.DatePickerControl dpFromDate;
    private app.common.controls.DatePickerControl dpToDate;
    private app.common.controls.GroupBox groupBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
