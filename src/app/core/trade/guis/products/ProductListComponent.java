/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.core.trade.guis.products;

import app.core.modules.constants.StoreConstants;
import app.core.trade.dtos.products.ProductEntity;
import base.data.dal.StoreProvider;
import base.infrastructures.ComponentRunnable;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JScrollPane;

/**
 *
 * @author Khang
 */
public class ProductListComponent extends javax.swing.JPanel implements ActionListener {

    /**
     * Creates new form ProductListGUI
     */
    ProductEntity products[] = {new ProductEntity()};
    private JList jproductList = new JList(products);
    private StoreProvider<ProductEntity> productProvider;
    private List<ProductEntity> dataList;
    private ProductEntity searchDto;

    public ProductListComponent() {
        initComponents();

        try {
            productProvider = new StoreProvider(ProductEntity.class);
        } catch (InstantiationException ex) {
            Logger.getLogger(ProductListComponent.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ProductListComponent.class.getName()).log(Level.SEVERE, null, ex);
        }
        searchDto = new ProductEntity();
        searchDto.setOffset(-1);

        jproductList.setCellRenderer(new ProductCellRenderer());
        jproductList.setVisibleRowCount(4);
        JScrollPane pane = new JScrollPane(jproductList);

        pnlListView.setLayout(new BorderLayout());
        pnlListView.add(pane, BorderLayout.NORTH);
//        add(button, BorderLayout.SOUTH);
        this.setVisible(true);

        this.loadData();
    }

    public JList getJProductList() {
        return this.jproductList;
    }

    public void setDataList(List<ProductEntity> dataList) {
        this.dataList = dataList;
    }

    public List<ProductEntity> getDataList() {
        return this.dataList;
    }

    public void setArrProducts(ProductEntity[] arr) {
        this.jproductList.setListData(arr);
    }

//    public void loadData(){
//        try {
//            dataList = productProvider.executeToList(StoreConstants.PRODUCT_SEARCH, searchDto);
//        } catch (Exception ex) {
//            Logger.getLogger(ProductListComponent.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if(dataList==null){
//           dataList = new ArrayList<ProductEntity>(); 
//        }
//        ProductEntity[] items = new ProductEntity[dataList.size()];
//        items = dataList.toArray(items );
//        
//        jproductList.setListData(items);
//    }
    public void loadData() {
        new Thread(new ComponentRunnable(this) {
            @Override
            public void run() {
                ProductListComponent panelComponent = (ProductListComponent) getComponent();
                try {
                    panelComponent.setDataList(productProvider.executeToList(StoreConstants.PRODUCT_SEARCH, searchDto));
                } catch (Exception ex) {
                    Logger.getLogger(ProductListComponent.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (panelComponent.getDataList() == null) {
                    panelComponent.setDataList(new ArrayList<ProductEntity>());
                }
                ProductEntity[] items = new ProductEntity[dataList.size()];
                items = panelComponent.getDataList().toArray(items);
                panelComponent.setArrProducts(items);
            }

        }).start();

    }

    public void setVisibleFilter(boolean isVisible) {
        this.pnlSearch.setVisible(isVisible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSearch = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlListView = new javax.swing.JPanel();

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(370, Short.MAX_VALUE))
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlListViewLayout = new javax.swing.GroupLayout(pnlListView);
        pnlListView.setLayout(pnlListViewLayout);
        pnlListViewLayout.setHorizontalGroup(
            pnlListViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlListViewLayout.setVerticalGroup(
            pnlListViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlListView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlListView;
    private javax.swing.JPanel pnlSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        int selected[] = jproductList.getSelectedIndices();
        System.out.println("Selected Elements:  ");

        for (int i = 0; i < selected.length; i++) {
            ProductEntity element = (ProductEntity) jproductList.getModel().getElementAt(selected[i]);
            System.out.println("  " + element.getName());
        }
    }
}
